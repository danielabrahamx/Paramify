"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRpcServer = createRpcServer;
const errors_1 = require("../errors");
const path_to_binaries_server_1 = require("./path-to-binaries-server");
const docker_server_1 = require("./docker-server");
function createRpcServer(opts) {
    if ((!!opts.nodePath && !!opts.adapterPath) || (opts.isForking && !!opts.adapterPath)) {
        return new path_to_binaries_server_1.PathToBinariesRpcServer(opts.nodePath, opts.adapterPath);
    }
    else if (!opts.nodePath && !opts.adapterPath && !opts.isForking) {
        const dockerSocketPath = typeof opts.docker === "string" ? opts.docker : undefined;
        return new docker_server_1.DockerRpcServer(dockerSocketPath);
    }
    throw new errors_1.PolkadotNodePluginError("Wrong hardhat network configuration. Please see https://github.com/paritytech/hardhat-polkadot/tree/main/examples");
}
//# sourceMappingURL=index.js.map